import{_ as c,c as u,b as i,a as s,d as a,w as e,r as o,o as r,e as p}from"./app-Bo0Dj4y2.js";const d={};function k(v,n){const t=o("RouteLink"),l=o("Mermaid");return r(),u("div",null,[n[16]||(n[16]=i('<h1 id="🔐-보안-인증-시스템" tabindex="-1"><a class="header-anchor" href="#🔐-보안-인증-시스템"><span>🔐 보안 &amp; 인증 시스템</span></a></h1><p><strong>6년간 LDAP/인증 시스템 전문 경험을 바탕으로 한 실무 가이드</strong></p><p>포탈시스템 인증부터 다중 인증 전략까지, 금융권 보안 요구사항을 만족하는 인증 시스템 설계와 운영 노하우를 정리합니다.</p><h2 id="📋-실무-경험-기반-인증-시스템" tabindex="-1"><a class="header-anchor" href="#📋-실무-경험-기반-인증-시스템"><span>📋 실무 경험 기반 인증 시스템</span></a></h2><h3 id="🏢-ldap-인증-시스템-전문" tabindex="-1"><a class="header-anchor" href="#🏢-ldap-인증-시스템-전문"><span>🏢 LDAP 인증 시스템 전문</span></a></h3>',5)),s("ul",null,[s("li",null,[a(t,{to:"/notes/security/oim-inhouse-solution.html"},{default:e(()=>n[0]||(n[0]=[p("Oracle Identity Manager 기반 인하우스 솔루션")])),_:1,__:[0]})]),s("li",null,[a(t,{to:"/notes/security/ldap-performance-tuning.html"},{default:e(()=>n[1]||(n[1]=[p("LDAP 프로비저닝 성능 최적화: 83% 개선")])),_:1,__:[1]})]),s("li",null,[a(t,{to:"/notes/security/ldap-connection-pooling.html"},{default:e(()=>n[2]||(n[2]=[p("커넥션 풀 패턴으로 대량 사용자 처리")])),_:1,__:[2]})]),s("li",null,[a(t,{to:"/notes/security/erp-user-dataflow.html"},{default:e(()=>n[3]||(n[3]=[p("ERP 사용자 데이터 플로우 설계")])),_:1,__:[3]})])]),n[17]||(n[17]=s("h3",{id:"🔑-다중-인증-시스템-설계",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🔑-다중-인증-시스템-설계"},[s("span",null,"🔑 다중 인증 시스템 설계")])],-1)),s("ul",null,[s("li",null,[a(t,{to:"/notes/security/multi-auth-architecture.html"},{default:e(()=>n[4]||(n[4]=[p("전략 패턴을 활용한 확장 가능한 인증 아키텍처")])),_:1,__:[4]})]),s("li",null,[a(t,{to:"/notes/security/certificate-phone-bio-auth.html"},{default:e(()=>n[5]||(n[5]=[p("공인인증서 vs 휴대폰 vs 생체인증 통합")])),_:1,__:[5]})]),s("li",null,[a(t,{to:"/notes/security/spring-security-auth.html"},{default:e(()=>n[6]||(n[6]=[p("Spring Security 기반 인증 시스템 구축")])),_:1,__:[6]})]),s("li",null,[a(t,{to:"/notes/security/jwt-security-strategy.html"},{default:e(()=>n[7]||(n[7]=[p("JWT 토큰 관리와 보안 강화 전략")])),_:1,__:[7]})])]),n[18]||(n[18]=s("h3",{id:"🏦-금융권-보안-시스템",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🏦-금융권-보안-시스템"},[s("span",null,"🏦 금융권 보안 시스템")])],-1)),s("ul",null,[s("li",null,[a(t,{to:"/notes/security/financial-audit-system.html"},{default:e(()=>n[8]||(n[8]=[p("금융감독원 감사 대응 시스템 구축")])),_:1,__:[8]})]),s("li",null,[a(t,{to:"/notes/security/financial-consumer-protection.html"},{default:e(()=>n[9]||(n[9]=[p("금융소비자 보호법 기술적 대응")])),_:1,__:[9]})]),s("li",null,[a(t,{to:"/notes/security/account-permission-scheduler.html"},{default:e(()=>n[10]||(n[10]=[p("계정/권한 관리 스케줄러 개발 (Quartz)")])),_:1,__:[10]})]),s("li",null,[a(t,{to:"/notes/security/sap-spml-integration.html"},{default:e(()=>n[11]||(n[11]=[p("SAP JCO, SPML 연동 인터페이스")])),_:1,__:[11]})])]),n[19]||(n[19]=s("h3",{id:"🔒-웹-보안-네트워크",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🔒-웹-보안-네트워크"},[s("span",null,"🔒 웹 보안 & 네트워크")])],-1)),s("ul",null,[s("li",null,[a(t,{to:"/notes/security/csp-configuration.html"},{default:e(()=>n[12]||(n[12]=[p("CSP (Content Security Policy) 설정과 운영")])),_:1,__:[12]})]),s("li",null,[a(t,{to:"/notes/security/apache-proxy-security.html"},{default:e(()=>n[13]||(n[13]=[p("Apache 프록시와 보안 헤더 설정")])),_:1,__:[13]})]),s("li",null,[a(t,{to:"/notes/security/security-vulnerability-response.html"},{default:e(()=>n[14]||(n[14]=[p("보안 취약점 조치 실무 경험")])),_:1,__:[14]})]),s("li",null,[a(t,{to:"/notes/security/network-security-policy.html"},{default:e(()=>n[15]||(n[15]=[p("네트워크 보안 정책 수립과 운영")])),_:1,__:[15]})])]),n[20]||(n[20]=s("h2",{id:"🏗️-실제-프로젝트-인증-아키텍처",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🏗️-실제-프로젝트-인증-아키텍처"},[s("span",null,"🏗️ 실제 프로젝트 인증 아키텍처")])],-1)),n[21]||(n[21]=s("h3",{id:"삼성화재-포탈-인증-시스템-2013-2019",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#삼성화재-포탈-인증-시스템-2013-2019"},[s("span",null,"삼성화재 포탈 인증 시스템 (2013-2019)")])],-1)),a(l,{code:"eJx9ks1K80AUhvdexcFvLXzQ6sKF0Jr+2rQi7gYXaU20UKrEiHRXtQWpBSta/GkqFcQf6KJq0Qh6Q8nJPTie1E7U6mzykHfmvO+ZM1phbSu3qugGLIbHgK+NzeyKrqyvwjjudPH8Di8agJ1D+/l1nPSPFWJ4UcGbbWw1loY/wwzPLOepDMNzQptluG9i7cqtmmA/VrDT9DS1uEzfb87uQdfd3YPhGeEsMWy9gKeL8hGGbQuv22A/1LHdd2sWtm45iB1RhhULq6dg98vOdfdP90GtEe4xltGVXEGFxLJaNPJGCWSlqKyoujCKs5QUmgcpr6s5Y00vCSXxGZJ3j/dVwJNjvKn8mcTp3fNdzpE5KkySRRbmhSCM5piz06dBNDvucZ23i69lfhu8fbEpNZzWSY9P5HudXwLZvQaf7qg0MvMeCTiXpv1sCaM0s5/qbtME57FsP7z90DNsUJTn/JhrbaB9SRCCiYkZkIjDPp4ljhBLPo4QR4mjxDHiGHHcxwniOHGSOEE8R5wkTokgXmHZVyBNLBNniNM+9u7PKPE3EwMtXyhM/9M0NRvI+oT4QAjmFG3yv0+QP08Eg4HA1Ng7RZRNpg=="}),n[22]||(n[22]=s("h3",{id:"건설공제조합-다중-인증-시스템-2022-2023",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#건설공제조합-다중-인증-시스템-2022-2023"},[s("span",null,"건설공제조합 다중 인증 시스템 (2022-2023)")])],-1)),a(l,{code:"eJyVkMtOwkAYhfc8xQTXRMQrLkyA0nLZmGjiYuICkKoJMcbLwl2Vagxi3IgRpaYLY4hhUaE1JfJEnX/ewXaodGpk4Szar3POzDn9d49Kh3toMx1B7jo+LY+/o/TcJNoINBMebNqwo0z2VgrD8xARu+nJTwboyvZES2Py3iXGPWgjBK2PsVA92GHvXwGg2fCmIdBV8mIhol+zLDMIyuAfy1eXXt5C49XtEWQJ2D8Kqk7rmmMb/4hzrB59VKHPxWWxM7A8FzOC2vG9QaKIacckTYXeGSh0XWCRMNQ199opcg7nhdn1rdD+tL5tm3wqkxy1Q4aqO4Kgb94fj9fU6SshV5BYwPTKghsdLnqIDLyfo+2W+wwcxXDlDaH4R68UisXWUIZxmuMMY4GxwDjLscixxHEuuDjLNvKMRcYFxhLjIjeZk7Na1T0v79dqqzOJueSSPM8JWV9YqJTkxTgniL4gy8mVOC9IvpCsJJbL8cg3WvQleQ=="}),n[23]||(n[23]=i(`<h2 id="📊-ldap-성능-최적화-실전-경험" tabindex="-1"><a class="header-anchor" href="#📊-ldap-성능-최적화-실전-경험"><span>📊 LDAP 성능 최적화 실전 경험</span></a></h2><h3 id="성능-개선-결과" tabindex="-1"><a class="header-anchor" href="#성능-개선-결과"><span>성능 개선 결과</span></a></h3><table><thead><tr><th>최적화 영역</th><th>Before</th><th>After</th><th>개선률</th><th>핵심 기술</th></tr></thead><tbody><tr><td><strong>단일 사용자 프로비저닝</strong></td><td>3초</td><td>0.5초</td><td><strong>83%</strong></td><td>Connection Pool</td></tr><tr><td><strong>대량 사용자 등록</strong></td><td>4시간</td><td>20분</td><td><strong>95%</strong></td><td>배치 처리</td></tr><tr><td><strong>OIM 서버 기동시간</strong></td><td>20분</td><td>5분</td><td><strong>75%</strong></td><td>시작 프로세스 최적화</td></tr><tr><td><strong>동시 접속 처리</strong></td><td>100명</td><td>1,000명</td><td><strong>10배</strong></td><td>세션 클러스터링</td></tr></tbody></table><h3 id="성능-최적화-핵심-패턴" tabindex="-1"><a class="header-anchor" href="#성능-최적화-핵심-패턴"><span>성능 최적화 핵심 패턴</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token comment">// 실제 적용한 LDAP Connection Pool 패턴</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LdapConnectionPool</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LdapConnection</span><span class="token punctuation">&gt;</span></span> pool<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> maxConnections <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">LdapConnection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">LdapConnection</span> conn <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>conn <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;Connection pool exhausted&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">return</span> conn<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">returnConnection</span><span class="token punctuation">(</span><span class="token class-name">LdapConnection</span> conn<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>conn <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> conn<span class="token punctuation">.</span><span class="token function">isConnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            pool<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🔧-인증-시스템-설계-패턴" tabindex="-1"><a class="header-anchor" href="#🔧-인증-시스템-설계-패턴"><span>🔧 인증 시스템 설계 패턴</span></a></h2><h3 id="_1-전략-패턴-적용-strategy-pattern" tabindex="-1"><a class="header-anchor" href="#_1-전략-패턴-적용-strategy-pattern"><span>1. 전략 패턴 적용 (Strategy Pattern)</span></a></h3><p><strong>새로운 인증 방식 추가 시간: 2주 → 3일</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token comment">// 실제 건설공제조합 프로젝트에서 사용한 패턴</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AuthenticationStrategy</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">AuthResult</span> <span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token class-name">AuthRequest</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">boolean</span> <span class="token function">supports</span><span class="token punctuation">(</span><span class="token class-name">AuthType</span> authType<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CertificateAuthenticationStrategy</span> <span class="token keyword">implements</span> <span class="token class-name">AuthenticationStrategy</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">AuthResult</span> <span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token class-name">AuthRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 공인인증서 검증 로직</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token function">verifyCertificate</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getCertificateData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">supports</span><span class="token punctuation">(</span><span class="token class-name">AuthType</span> authType<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">AuthType</span><span class="token punctuation">.</span><span class="token constant">CERTIFICATE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>authType<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthenticationService</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AuthenticationStrategy</span><span class="token punctuation">&gt;</span></span> strategies<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">AuthResult</span> <span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token class-name">AuthRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">AuthenticationStrategy</span> strategy <span class="token operator">=</span> strategies<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">supports</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getAuthType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">UnsupportedAuthTypeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">        <span class="token keyword">return</span> strategy<span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-팩토리-패턴으로-인증-프로바이더-관리" tabindex="-1"><a class="header-anchor" href="#_2-팩토리-패턴으로-인증-프로바이더-관리"><span>2. 팩토리 패턴으로 인증 프로바이더 관리</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthProviderFactory</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">ApplicationContext</span> context<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">AuthProvider</span> <span class="token function">createProvider</span><span class="token punctuation">(</span><span class="token class-name">AuthType</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">switch</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token constant">CERTIFICATE</span><span class="token operator">:</span></span>
<span class="line">                <span class="token keyword">return</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">CertificateAuthProvider</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token constant">PHONE</span><span class="token operator">:</span></span>
<span class="line">                <span class="token keyword">return</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">PhoneAuthProvider</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token constant">BIOMETRIC</span><span class="token operator">:</span></span>
<span class="line">                <span class="token keyword">return</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">BiometricAuthProvider</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Unsupported auth type: &quot;</span> <span class="token operator">+</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🛡️-보안-강화-실무-가이드" tabindex="-1"><a class="header-anchor" href="#🛡️-보안-강화-실무-가이드"><span>🛡️ 보안 강화 실무 가이드</span></a></h2><h3 id="세션-보안-관리" tabindex="-1"><a class="header-anchor" href="#세션-보안-관리"><span>세션 보안 관리</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token comment">// 실제 사용한 세션 보안 설정</span></span>
<span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token annotation punctuation">@EnableWebSecurity</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">SessionRegistry</span> <span class="token function">sessionRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SessionRegistryImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">        http</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">sessionManagement</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">maximumSessions</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">maxSessionsPreventsLogin</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">sessionRegistry</span><span class="token punctuation">(</span><span class="token function">sessionRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">sessionFixation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">changeSessionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">sessionCreationPolicy</span><span class="token punctuation">(</span><span class="token class-name">SessionCreationPolicy</span><span class="token punctuation">.</span><span class="token constant">IF_REQUIRED</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jwt-토큰-보안-강화" tabindex="-1"><a class="header-anchor" href="#jwt-토큰-보안-강화"><span>JWT 토큰 보안 강화</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JwtTokenProvider</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> secretKey <span class="token operator">=</span> <span class="token function">getSecretFromVault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">long</span> tokenValidityInMs <span class="token operator">=</span> <span class="token number">3600000</span><span class="token punctuation">;</span> <span class="token comment">// 1시간</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">createToken</span><span class="token punctuation">(</span><span class="token class-name">Authentication</span> authentication<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Claims</span> claims <span class="token operator">=</span> <span class="token class-name">Jwts</span><span class="token punctuation">.</span><span class="token function">claims</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span>authentication<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        claims<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;authorities&quot;</span><span class="token punctuation">,</span> <span class="token function">getAuthorities</span><span class="token punctuation">(</span>authentication<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token class-name">Date</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Date</span> validity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> tokenValidityInMs<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">Jwts</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">setClaims</span><span class="token punctuation">(</span>claims<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">setIssuedAt</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">setExpiration</span><span class="token punctuation">(</span>validity<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">signWith</span><span class="token punctuation">(</span><span class="token class-name">SignatureAlgorithm</span><span class="token punctuation">.</span><span class="token constant">HS512</span><span class="token punctuation">,</span> secretKey<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">compact</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 토큰 블랙리스트 관리 (Redis 활용)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">invalidateToken</span><span class="token punctuation">(</span><span class="token class-name">String</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;blacklisted_tokens&quot;</span><span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        redisTemplate<span class="token punctuation">.</span><span class="token function">expire</span><span class="token punctuation">(</span><span class="token string">&quot;blacklisted_tokens&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofHours</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🔍-보안-감사-및-컴플라이언스" tabindex="-1"><a class="header-anchor" href="#🔍-보안-감사-및-컴플라이언스"><span>🔍 보안 감사 및 컴플라이언스</span></a></h2><h3 id="금융감독원-감사-대응-체크리스트" tabindex="-1"><a class="header-anchor" href="#금융감독원-감사-대응-체크리스트"><span>금융감독원 감사 대응 체크리스트</span></a></h3><ul><li>[ ] <strong>접근 로그 수집</strong>: 모든 인증 시도 기록</li><li>[ ] <strong>권한 변경 추적</strong>: 누가, 언제, 무엇을 변경했는지</li><li>[ ] <strong>비밀번호 정책</strong>: 복잡도, 만료, 이력 관리</li><li>[ ] <strong>세션 관리</strong>: 타임아웃, 동시 접속 제한</li><li>[ ] <strong>암호화</strong>: 전송/저장 데이터 암호화</li><li>[ ] <strong>백업 및 복구</strong>: 인증 데이터 안전한 백업</li></ul><h3 id="실시간-보안-모니터링" tabindex="-1"><a class="header-anchor" href="#실시간-보안-모니터링"><span>실시간 보안 모니터링</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 실제 사용한 보안 모니터링 스크립트</span></span>
<span class="line"><span class="token comment">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># 비정상 로그인 시도 감지</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">LOG_FILE</span><span class="token operator">=</span><span class="token string">&quot;/var/log/auth.log&quot;</span></span>
<span class="line"><span class="token assign-left variable">THRESHOLD</span><span class="token operator">=</span><span class="token number">5</span></span>
<span class="line"><span class="token assign-left variable">TIME_WINDOW</span><span class="token operator">=</span><span class="token number">300</span>  <span class="token comment"># 5분</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 5분 내 5회 이상 실패 시도 감지</span></span>
<span class="line"><span class="token assign-left variable">failed_attempts</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">grep</span> <span class="token string">&quot;authentication failure&quot;</span> $LOG_FILE <span class="token operator">|</span> </span>
<span class="line">                 <span class="token function">grep</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> <span class="token parameter variable">-d</span> <span class="token string">&#39;5 minutes ago&#39;</span> <span class="token string">&#39;+%b %d %H:%M&#39;</span><span class="token variable">)</span></span>&quot;</span><span class="token variable">)</span></span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$failed_attempts</span> <span class="token parameter variable">-gt</span> <span class="token variable">$THRESHOLD</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Security Alert: <span class="token variable">$failed_attempts</span> failed login attempts detected&quot;</span> <span class="token operator">|</span> </span>
<span class="line">    mail <span class="token parameter variable">-s</span> <span class="token string">&quot;Security Alert&quot;</span> security@company.com</span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📈-트러블슈팅-실전-경험" tabindex="-1"><a class="header-anchor" href="#📈-트러블슈팅-실전-경험"><span>📈 트러블슈팅 실전 경험</span></a></h2><h3 id="case-1-ldap-서버-부하로-인한-인증-지연" tabindex="-1"><a class="header-anchor" href="#case-1-ldap-서버-부하로-인한-인증-지연"><span>Case 1: LDAP 서버 부하로 인한 인증 지연</span></a></h3><p><strong>문제</strong>: 대량 사용자 동시 접속 시 인증 지연 (3초 → 30초)<br><strong>분석</strong>: LDAP 커넥션 생성 비용과 동시 연결 수 제한<br><strong>해결</strong>: 커넥션 풀 도입 + 로드 밸런싱<br><strong>결과</strong>: 평균 응답 시간 0.5초 달성</p><h3 id="case-2-세션-고정-공격-session-fixation" tabindex="-1"><a class="header-anchor" href="#case-2-세션-고정-공격-session-fixation"><span>Case 2: 세션 고정 공격 (Session Fixation)</span></a></h3><p><strong>문제</strong>: 보안 감사에서 세션 고정 취약점 발견<br><strong>분석</strong>: 로그인 후 세션 ID가 변경되지 않음<br><strong>해결</strong>: Spring Security의 changeSessionId 정책 적용<br><strong>결과</strong>: 세션 보안 강화 및 감사 통과</p><h3 id="case-3-토큰-탈취-위험-jwt" tabindex="-1"><a class="header-anchor" href="#case-3-토큰-탈취-위험-jwt"><span>Case 3: 토큰 탈취 위험 (JWT)</span></a></h3><p><strong>문제</strong>: JWT 토큰 만료 시간이 길어 보안 위험<br><strong>분석</strong>: 24시간 유효 토큰으로 인한 탈취 위험<br><strong>해결</strong>: Refresh Token 패턴 도입 + 짧은 Access Token<br><strong>결과</strong>: 보안성 향상 (1시간 Access + 1주 Refresh)</p><h2 id="🎯-인증-시스템-미래-방향" tabindex="-1"><a class="header-anchor" href="#🎯-인증-시스템-미래-방향"><span>🎯 인증 시스템 미래 방향</span></a></h2><h3 id="현재-관심-기술" tabindex="-1"><a class="header-anchor" href="#현재-관심-기술"><span>현재 관심 기술</span></a></h3><ul><li><strong>Zero Trust Architecture</strong>: 모든 접근을 검증</li><li><strong>Passwordless Authentication</strong>: 생체인증, FIDO2</li><li><strong>OAuth 2.1</strong>: 보안 강화된 OAuth 표준</li><li><strong>WebAuthn</strong>: 웹 기반 강인증</li></ul><h3 id="적용-예정-기술" tabindex="-1"><a class="header-anchor" href="#적용-예정-기술"><span>적용 예정 기술</span></a></h3><ul><li><strong>Multi-Factor Authentication (MFA)</strong>: 다단계 인증 의무화</li><li><strong>Risk-based Authentication</strong>: 위험도 기반 적응형 인증</li><li><strong>Identity Federation</strong>: 조직 간 신원 연합</li></ul><hr><blockquote><p><strong>&quot;보안은 사용성과 상충하는 것이 아니라, 사용자가 안전하게 시스템을 이용할 수 있게 하는 것입니다. 6년간의 인증 시스템 운영 경험을 통해 배운 핵심 철학입니다.&quot;</strong></p></blockquote>`,35))])}const b=c(d,[["render",k]]),h=JSON.parse('{"path":"/notes/security/","title":"🔐 보안 & 인증 시스템","lang":"ko-KR","frontmatter":{},"headers":[{"level":2,"title":"📋 실무 경험 기반 인증 시스템","slug":"📋-실무-경험-기반-인증-시스템","link":"#📋-실무-경험-기반-인증-시스템","children":[{"level":3,"title":"🏢 LDAP 인증 시스템 전문","slug":"🏢-ldap-인증-시스템-전문","link":"#🏢-ldap-인증-시스템-전문","children":[]},{"level":3,"title":"🔑 다중 인증 시스템 설계","slug":"🔑-다중-인증-시스템-설계","link":"#🔑-다중-인증-시스템-설계","children":[]},{"level":3,"title":"🏦 금융권 보안 시스템","slug":"🏦-금융권-보안-시스템","link":"#🏦-금융권-보안-시스템","children":[]},{"level":3,"title":"🔒 웹 보안 & 네트워크","slug":"🔒-웹-보안-네트워크","link":"#🔒-웹-보안-네트워크","children":[]}]},{"level":2,"title":"🏗️ 실제 프로젝트 인증 아키텍처","slug":"🏗️-실제-프로젝트-인증-아키텍처","link":"#🏗️-실제-프로젝트-인증-아키텍처","children":[{"level":3,"title":"삼성화재 포탈 인증 시스템 (2013-2019)","slug":"삼성화재-포탈-인증-시스템-2013-2019","link":"#삼성화재-포탈-인증-시스템-2013-2019","children":[]},{"level":3,"title":"건설공제조합 다중 인증 시스템 (2022-2023)","slug":"건설공제조합-다중-인증-시스템-2022-2023","link":"#건설공제조합-다중-인증-시스템-2022-2023","children":[]}]},{"level":2,"title":"📊 LDAP 성능 최적화 실전 경험","slug":"📊-ldap-성능-최적화-실전-경험","link":"#📊-ldap-성능-최적화-실전-경험","children":[{"level":3,"title":"성능 개선 결과","slug":"성능-개선-결과","link":"#성능-개선-결과","children":[]},{"level":3,"title":"성능 최적화 핵심 패턴","slug":"성능-최적화-핵심-패턴","link":"#성능-최적화-핵심-패턴","children":[]}]},{"level":2,"title":"🔧 인증 시스템 설계 패턴","slug":"🔧-인증-시스템-설계-패턴","link":"#🔧-인증-시스템-설계-패턴","children":[{"level":3,"title":"1. 전략 패턴 적용 (Strategy Pattern)","slug":"_1-전략-패턴-적용-strategy-pattern","link":"#_1-전략-패턴-적용-strategy-pattern","children":[]},{"level":3,"title":"2. 팩토리 패턴으로 인증 프로바이더 관리","slug":"_2-팩토리-패턴으로-인증-프로바이더-관리","link":"#_2-팩토리-패턴으로-인증-프로바이더-관리","children":[]}]},{"level":2,"title":"🛡️ 보안 강화 실무 가이드","slug":"🛡️-보안-강화-실무-가이드","link":"#🛡️-보안-강화-실무-가이드","children":[{"level":3,"title":"세션 보안 관리","slug":"세션-보안-관리","link":"#세션-보안-관리","children":[]},{"level":3,"title":"JWT 토큰 보안 강화","slug":"jwt-토큰-보안-강화","link":"#jwt-토큰-보안-강화","children":[]}]},{"level":2,"title":"🔍 보안 감사 및 컴플라이언스","slug":"🔍-보안-감사-및-컴플라이언스","link":"#🔍-보안-감사-및-컴플라이언스","children":[{"level":3,"title":"금융감독원 감사 대응 체크리스트","slug":"금융감독원-감사-대응-체크리스트","link":"#금융감독원-감사-대응-체크리스트","children":[]},{"level":3,"title":"실시간 보안 모니터링","slug":"실시간-보안-모니터링","link":"#실시간-보안-모니터링","children":[]}]},{"level":2,"title":"📈 트러블슈팅 실전 경험","slug":"📈-트러블슈팅-실전-경험","link":"#📈-트러블슈팅-실전-경험","children":[{"level":3,"title":"Case 1: LDAP 서버 부하로 인한 인증 지연","slug":"case-1-ldap-서버-부하로-인한-인증-지연","link":"#case-1-ldap-서버-부하로-인한-인증-지연","children":[]},{"level":3,"title":"Case 2: 세션 고정 공격 (Session Fixation)","slug":"case-2-세션-고정-공격-session-fixation","link":"#case-2-세션-고정-공격-session-fixation","children":[]},{"level":3,"title":"Case 3: 토큰 탈취 위험 (JWT)","slug":"case-3-토큰-탈취-위험-jwt","link":"#case-3-토큰-탈취-위험-jwt","children":[]}]},{"level":2,"title":"🎯 인증 시스템 미래 방향","slug":"🎯-인증-시스템-미래-방향","link":"#🎯-인증-시스템-미래-방향","children":[{"level":3,"title":"현재 관심 기술","slug":"현재-관심-기술","link":"#현재-관심-기술","children":[]},{"level":3,"title":"적용 예정 기술","slug":"적용-예정-기술","link":"#적용-예정-기술","children":[]}]}],"git":{"updatedTime":1753245441000,"contributors":[{"name":"byounghoonmoon","username":"byounghoonmoon","email":"passion.mbh@gmail.com","commits":1,"url":"https://github.com/byounghoonmoon"}],"changelog":[{"hash":"c6c756b87bac92db7df2e9d3758e26e214f23fba","time":1753245441000,"email":"passion.mbh@gmail.com","author":"byounghoonmoon","message":"first commit"}]},"filePathRelative":"notes/security/README.md"}');export{b as comp,h as data};
