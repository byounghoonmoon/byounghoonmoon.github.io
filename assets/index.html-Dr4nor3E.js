import{_ as p,c,b as i,a as s,d as t,w as e,r,o as d,e as l}from"./app-Bo0Dj4y2.js";const u={};function h(g,n){const a=r("RouteLink"),o=r("Mermaid");return d(),c("div",null,[n[16]||(n[16]=i('<h1 id="🏗️-소프트웨어-아키텍처" tabindex="-1"><a class="header-anchor" href="#🏗️-소프트웨어-아키텍처"><span>🏗️ 소프트웨어 아키텍처</span></a></h1><p><strong>금융권 MSA부터 전사 표준화까지, 10년간의 아키텍처 설계 경험</strong></p><p>포탈 시스템, MSA 전환, 표준 템플릿까지 다양한 규모의 시스템 아키텍처를 설계하고 운영한 실무 경험을 정리합니다.</p><h2 id="📋-실무-경험-기반-아키텍처-가이드" tabindex="-1"><a class="header-anchor" href="#📋-실무-경험-기반-아키텍처-가이드"><span>📋 실무 경험 기반 아키텍처 가이드</span></a></h2><h3 id="🏢-금융권-msa-설계-경험" tabindex="-1"><a class="header-anchor" href="#🏢-금융권-msa-설계-경험"><span>🏢 금융권 MSA 설계 경험</span></a></h3>',5)),s("ul",null,[s("li",null,[t(a,{to:"/notes/architecture/metlife-msa-transformation.html"},{default:e(()=>n[0]||(n[0]=[l("메트라이프 MSA 전환: Spring Cloud 기반 설계")])),_:1,__:[0]})]),s("li",null,[t(a,{to:"/notes/architecture/shinhan-service-decomposition.html"},{default:e(()=>n[1]||(n[1]=[l("신한라이프 서비스 분리 전략과 기준")])),_:1,__:[1]})]),s("li",null,[t(a,{to:"/notes/architecture/construction-auth-architecture.html"},{default:e(()=>n[2]||(n[2]=[l("건설공제조합 인증 시스템 아키텍처")])),_:1,__:[2]})]),s("li",null,[t(a,{to:"/notes/architecture/financial-security-patterns.html"},{default:e(()=>n[3]||(n[3]=[l("금융 시스템의 보안 아키텍처 패턴")])),_:1,__:[3]})])]),n[17]||(n[17]=s("h3",{id:"⚙️-전략-패턴과-확장성-설계",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#⚙️-전략-패턴과-확장성-설계"},[s("span",null,"⚙️ 전략 패턴과 확장성 설계")])],-1)),s("ul",null,[s("li",null,[t(a,{to:"/notes/architecture/multi-auth-strategy-pattern.html"},{default:e(()=>n[4]||(n[4]=[l("다중 인증 시스템: 전략 패턴 실전 적용")])),_:1,__:[4]})]),s("li",null,[t(a,{to:"/notes/architecture/payment-system-architecture.html"},{default:e(()=>n[5]||(n[5]=[l("결제 시스템 아키텍처: 확장 가능한 설계")])),_:1,__:[5]})]),s("li",null,[t(a,{to:"/notes/architecture/common-library-design.html"},{default:e(()=>n[6]||(n[6]=[l("공통 라이브러리 설계: 40% 코드 재사용 달성")])),_:1,__:[6]})]),s("li",null,[t(a,{to:"/notes/architecture/legacy-modernization-strategy.html"},{default:e(()=>n[7]||(n[7]=[l("레거시 시스템 현대화 전략")])),_:1,__:[7]})])]),n[18]||(n[18]=s("h3",{id:"🚀-성능과-확장성",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🚀-성능과-확장성"},[s("span",null,"🚀 성능과 확장성")])],-1)),s("ul",null,[s("li",null,[t(a,{to:"/notes/architecture/high-traffic-architecture.html"},{default:e(()=>n[8]||(n[8]=[l("대용량 트래픽 처리 아키텍처")])),_:1,__:[8]})]),s("li",null,[t(a,{to:"/notes/architecture/ldap-performance-optimization.html"},{default:e(()=>n[9]||(n[9]=[l("LDAP 성능 최적화: 커넥션 풀 패턴")])),_:1,__:[9]})]),s("li",null,[t(a,{to:"/notes/architecture/cache-consistency-patterns.html"},{default:e(()=>n[10]||(n[10]=[l("캐시 전략과 데이터 일관성")])),_:1,__:[10]})]),s("li",null,[t(a,{to:"/notes/architecture/distributed-transaction-management.html"},{default:e(()=>n[11]||(n[11]=[l("분산 시스템의 트랜잭션 관리")])),_:1,__:[11]})])]),n[19]||(n[19]=s("h3",{id:"🔧-devops와-운영-아키텍처",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🔧-devops와-운영-아키텍처"},[s("span",null,"🔧 DevOps와 운영 아키텍처")])],-1)),s("ul",null,[s("li",null,[t(a,{to:"/notes/architecture/cicd-pipeline-architecture.html"},{default:e(()=>n[12]||(n[12]=[l("CI/CD 파이프라인 아키텍처 설계")])),_:1,__:[12]})]),s("li",null,[t(a,{to:"/notes/architecture/observability-architecture.html"},{default:e(()=>n[13]||(n[13]=[l("모니터링과 관찰 가능성 (Observability)")])),_:1,__:[13]})]),s("li",null,[t(a,{to:"/notes/architecture/disaster-recovery-architecture.html"},{default:e(()=>n[14]||(n[14]=[l("장애 대응과 복구 전략")])),_:1,__:[14]})]),s("li",null,[t(a,{to:"/notes/architecture/zero-downtime-deployment.html"},{default:e(()=>n[15]||(n[15]=[l("무중단 배포 아키텍처 패턴")])),_:1,__:[15]})])]),n[20]||(n[20]=s("h2",{id:"🏗️-실제-프로젝트-아키텍처-진화-과정",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🏗️-실제-프로젝트-아키텍처-진화-과정"},[s("span",null,"🏗️ 실제 프로젝트 아키텍처 진화 과정")])],-1)),t(o,{code:"eJyFU0FPE0EYvfdXfIlpepFIC0LbW7vdixFpLPG+bYd2wu4MmZ02ICFBWAiBKjGhEbFETCpqQiIoIJz8Lx67O9Gf4MzCUtptdQ9z2Pe+mffevIlGlzDBPA1LEYAYryILxdIQKxo2it2//fXMYNgomsiWmCLK//MMWwZb1KhJmZq4N5GJZ1MZf6gLz6AF3qXM+l8fJUtZGbEuaTwTH09qAcnEBHWxlJaYzI4GmI1KlJR7RGQzE0ktGRA4Yhz34Ho8q+uTAV40SnMVRmukPECeZWCSnasMPTfABh8ZoJqeGsslYxJcjiwvR6ORCMcWUq58PsfcRPDn/c6b35c7kGGlKuaoxGsMgV6nZo1jSuARrTGCFv0Bf0mMxsdG5DIBaTX7Ts1OUUJNzKu4BDozfFr3S4NOpDKZuI0gTxk3TPCcdue7EyKKjXPR/ALewaV3dPCgc9EQzRZ4TUestsX6S+/bXmiigElFmshTTDjQWZhhNV7tYwWyJ5XslBz6tf8B8ojNUmYZpITgKQrshvZ/nMvkITkWlYpP3a2PIPZeeNuHIZpGCZHRqcDylJogGp+Fcwbup01vqy2ck9CAe7jZOT3xtltyR8dtrIi3u/8yemMhMSotJBJ+8vsrMFXISMMGsX0nA/UXZOykAppJa2Xw1g7EWksGD53zY++iGWLnqCreSI7hOiLScsu9cqQBcC8c0TwL36tk8Vv2/9Wr3iTGffWvvkLeNLgSLutRkZVESuiAYC1LhRpwhwlH9el5u0cDiNctr62CDbGnizZidaOIZWcX1ZbyDoZIfnjd8o3e51Hghnr7Zfy8L/U0eIeOt3rcp2S9JXYb7tHPu0T/SkaeyA3q6KYvd2HpCJl0HjHQF+SKkSpq58fVdVcifwEPXLrQ"}),n[21]||(n[21]=i('<h2 id="📊-실무-검증된-아키텍처-패턴" tabindex="-1"><a class="header-anchor" href="#📊-실무-검증된-아키텍처-패턴"><span>📊 실무 검증된 아키텍처 패턴</span></a></h2><h3 id="msa-서비스-분해-기준" tabindex="-1"><a class="header-anchor" href="#msa-서비스-분해-기준"><span>MSA 서비스 분해 기준</span></a></h3><table><thead><tr><th>분해 기준</th><th>고려사항</th><th>실제 적용 사례</th><th>결과</th></tr></thead><tbody><tr><td><strong>비즈니스 도메인</strong></td><td>응집도, 결합도</td><td>신한라이프 보험상품/고객 분리</td><td>독립적 개발 가능</td></tr><tr><td><strong>데이터 소유권</strong></td><td>트랜잭션 경계</td><td>건설공제조합 인증/업무 분리</td><td>데이터 일관성 확보</td></tr><tr><td><strong>팀 구조</strong></td><td>Conway&#39;s Law</td><td>메트라이프 채널별 분리</td><td>개발 효율성 향상</td></tr><tr><td><strong>변경 빈도</strong></td><td>배포 독립성</td><td>aTworks 테스트/실행 분리</td><td>배포 리스크 최소화</td></tr></tbody></table><h3 id="아키텍처-패턴별-적용-경험" tabindex="-1"><a class="header-anchor" href="#아키텍처-패턴별-적용-경험"><span>아키텍처 패턴별 적용 경험</span></a></h3>',4)),t(o,{code:"eJydVF1v00gUfc+vuMqq25dm2yQ1tFFVyU5sgVStqqWLdoX2YWJPE6tuHI2d3VZQCVYpYmkgy9KwTUmgSOFTlYighfDCj+GxHgt+AjMTByfgIIRfxuNz55w7517fiYmLZsl0M3AxBjDpFvE6nszAZB45eHLq06fziJgob2GHYTyQfS8Tcx2Rzaxt2YSf+CEpnZKyM+JQCK/gDTcMWRXPZyGKTQxMwqCZ3OxpOTkIsswSDrHZlCxp0gBzsG6XjJEk5meysjY/CHAxcc0RXFFyqqYM8DzS1wrErpSMiPR0q+IwAmWtIEA1raW03OegyH34+gzeim1tTUzEYgWCykVYUcQJp5Lv75fk39VfLsQ/3K/ffd+rwxLaxAQbIBO9aLpYdysEL+TJ9OKCs44sa5EeVP2rx/TgCpy8rNLesb/XANqo+n93/O0b9MXewnQ/Lv6HkOGPYRLGY9qlgTZ/5CTXrP0LywQ7uOQiHjAs9OvZaXn5bKASwSqnLsTf7Td5zkrFYVVxHFiyC6Y+TOI3junOIXhvqvTRNW/nGr3eAe9Biz6+EjJCSJnmOf33FnLIRSDrOuMcZvNudGn7yK92gR5cpvce0qu1qMSSkEgssvz6S1oAuGSIddT7M+pvMpfcfQ1n8AYq2CVkjXXerx/613vwI9A7R17tFk/Drz3xq0ffarkiLL/5HORy2TJ14Thk7VEVr171nu7Sdu8Ln0Ie5jzLuQaygcqs6UY8os2e9+oy0J0W89rfbgH9v+vVm1E0wu39Z7BsE3eUo91jt/Nv7jG3ecXoQYO2ozpL6VutpPtL6itWq+fVn1d4xzwA9U/Wb4kcMdk6vs/bR96LDjf8pNf1unvf1eRZ4fjtTl8Slit5y3SKmEQLed2Wf+efCO6sMHy/FtCwdo8moJ1bJ91WFIGw+vbDgOBcJe/oxMyPS+Tk+NCrb0fx9P3O9ls7G9HaYppA4qfE4qU4fVz1m7vxS6LNBcpfAtBvNtgfxEBRmJBAt5Dj5PAqWHwQnXM3LQyrpmVlgoE35bjEXsOZYL4F28RfpuEWM+nyxpTOZ2smmNoD2EBOERGCNjMggTQqVGR/3ojOnCapc590ZtkAl8brpNTTuXTqW3Qw935YSNO0tDpg5tv5uZnxQuopKRnCEUKhWlCF0MEhSJQgvPLwKVGJoTRjHwHQSKT1"}),n[22]||(n[22]=i(`<h2 id="🎯-아키텍처-설계-원칙과-실무-적용" tabindex="-1"><a class="header-anchor" href="#🎯-아키텍처-설계-원칙과-실무-적용"><span>🎯 아키텍처 설계 원칙과 실무 적용</span></a></h2><h3 id="_1-solid-원칙-실무-적용" tabindex="-1"><a class="header-anchor" href="#_1-solid-원칙-실무-적용"><span>1. SOLID 원칙 실무 적용</span></a></h3><div class="hint-container tip"><p class="hint-container-title">단일 책임 원칙 (SRP)</p><p>건설공제조합 프로젝트에서 인증 관련 클래스들을 각 인증 방식별로 분리하여 코드 유지보수성을 크게 향상시켰습니다.</p></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token comment">// ❌ SRP 위반 - 하나의 클래스가 여러 인증 방식을 처리</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthenticationService</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">authenticateWithCertificate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">authenticateWithPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">authenticateWithBiometric</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ✅ SRP 준수 - 각 인증 방식별로 분리</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AuthenticationStrategy</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">boolean</span> <span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token class-name">AuthRequest</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CertificateAuthenticationStrategy</span> <span class="token keyword">implements</span> <span class="token class-name">AuthenticationStrategy</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token class-name">AuthRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-확장성-설계-패턴" tabindex="-1"><a class="header-anchor" href="#_2-확장성-설계-패턴"><span>2. 확장성 설계 패턴</span></a></h3><p><strong>전략 패턴 적용으로 새로운 인증 방식 추가 시간: 2주 → 3일</strong></p><h3 id="_3-장애-격리와-복구" tabindex="-1"><a class="header-anchor" href="#_3-장애-격리와-복구"><span>3. 장애 격리와 복구</span></a></h3><table><thead><tr><th>패턴</th><th>적용 사례</th><th>효과</th></tr></thead><tbody><tr><td><strong>Circuit Breaker</strong></td><td>메트라이프 외부 API 호출</td><td>장애 전파 방지</td></tr><tr><td><strong>Bulkhead</strong></td><td>신한라이프 서비스별 리소스 분리</td><td>격리된 장애 처리</td></tr><tr><td><strong>Timeout</strong></td><td>모든 프로젝트 HTTP 호출</td><td>무한 대기 방지</td></tr></tbody></table><h2 id="🔧-실무-아키텍처-체크리스트" tabindex="-1"><a class="header-anchor" href="#🔧-실무-아키텍처-체크리스트"><span>🔧 실무 아키텍처 체크리스트</span></a></h2><h3 id="설계-초기-단계" tabindex="-1"><a class="header-anchor" href="#설계-초기-단계"><span>설계 초기 단계</span></a></h3><ul><li>[ ] <strong>비즈니스 요구사항 분석</strong> (도메인 모델링)</li><li>[ ] <strong>비기능적 요구사항 정의</strong> (성능, 보안, 확장성)</li><li>[ ] <strong>기술 스택 선정</strong> (기존 인프라와의 호환성 고려)</li><li>[ ] <strong>서비스 경계 정의</strong> (단일 책임, 데이터 소유권)</li><li>[ ] <strong>API 설계</strong> (REST/GraphQL, 버전 관리)</li></ul><h3 id="구현-단계" tabindex="-1"><a class="header-anchor" href="#구현-단계"><span>구현 단계</span></a></h3><ul><li>[ ] <strong>공통 기능 모듈화</strong> (인증, 로깅, 예외 처리)</li><li>[ ] <strong>데이터 액세스 계층 설계</strong> (Repository Pattern)</li><li>[ ] <strong>보안 아키텍처 적용</strong> (인증/인가, 데이터 암호화)</li><li>[ ] <strong>모니터링 포인트 설정</strong> (메트릭, 로그, 추적)</li><li>[ ] <strong>테스트 전략 수립</strong> (단위/통합/E2E 테스트)</li></ul><h3 id="운영-단계" tabindex="-1"><a class="header-anchor" href="#운영-단계"><span>운영 단계</span></a></h3><ul><li>[ ] <strong>성능 모니터링</strong> (응답시간, 처리량, 에러율)</li><li>[ ] <strong>장애 대응 계획</strong> (복구 절차, 롤백 전략)</li><li>[ ] <strong>용량 계획</strong> (리소스 사용량, 확장 시점)</li><li>[ ] <strong>보안 감사</strong> (취약점 점검, 접근 권한 검토)</li></ul><h2 id="📈-실무-트러블슈팅과-해결" tabindex="-1"><a class="header-anchor" href="#📈-실무-트러블슈팅과-해결"><span>📈 실무 트러블슈팅과 해결</span></a></h2><h3 id="case-1-메모리-누수로-인한-시스템-다운" tabindex="-1"><a class="header-anchor" href="#case-1-메모리-누수로-인한-시스템-다운"><span>Case 1: 메모리 누수로 인한 시스템 다운</span></a></h3><p><strong>문제</strong>: 장기간 운영 시 OutOfMemoryError 발생<br><strong>분석</strong>: Connection Pool 커넥션이 정상 반환되지 않음<br><strong>해결</strong>: <code>@Transactional</code> 범위 최적화 및 예외 처리 개선<br><strong>결과</strong>: 시스템 안정성 99.5% → 99.9% 향상</p><h3 id="case-2-msa-환경에서-분산-트랜잭션-문제" tabindex="-1"><a class="header-anchor" href="#case-2-msa-환경에서-분산-트랜잭션-문제"><span>Case 2: MSA 환경에서 분산 트랜잭션 문제</span></a></h3><p><strong>문제</strong>: 서비스 간 데이터 일관성 보장 어려움<br><strong>분석</strong>: Two-Phase Commit의 성능 이슈<br><strong>해결</strong>: Saga 패턴과 이벤트 기반 보상 트랜잭션 도입<br><strong>결과</strong>: 트랜잭션 처리 시간 50% 단축</p><h3 id="case-3-레거시-시스템-성능-병목" tabindex="-1"><a class="header-anchor" href="#case-3-레거시-시스템-성능-병목"><span>Case 3: 레거시 시스템 성능 병목</span></a></h3><p><strong>문제</strong>: LDAP 프로비저닝 처리 시간 과다 (3초/건)<br><strong>분석</strong>: 매번 새로운 연결 생성으로 인한 오버헤드<br><strong>해결</strong>: 커넥션 풀 패턴 적용 및 불필요한 로직 제거<br><strong>결과</strong>: 처리 시간 83% 단축 (3초 → 0.5초)</p><h2 id="🎯-아키텍처-진화-방향" tabindex="-1"><a class="header-anchor" href="#🎯-아키텍처-진화-방향"><span>🎯 아키텍처 진화 방향</span></a></h2><h3 id="현재-관심-기술" tabindex="-1"><a class="header-anchor" href="#현재-관심-기술"><span>현재 관심 기술</span></a></h3><ul><li><strong>Event Sourcing</strong>: 이벤트 기반 상태 관리</li><li><strong>CQRS</strong>: 읽기/쓰기 모델 분리</li><li><strong>Service Mesh</strong>: Istio, Linkerd 활용</li><li><strong>Serverless Architecture</strong>: FaaS 패턴 적용</li></ul><h3 id="향후-적용-계획" tabindex="-1"><a class="header-anchor" href="#향후-적용-계획"><span>향후 적용 계획</span></a></h3><ul><li><strong>Cloud Native</strong>: Kubernetes 기반 플랫폼</li><li><strong>GitOps</strong>: 선언적 인프라 관리</li><li><strong>AI/ML Ops</strong>: 지능형 시스템 운영</li></ul><hr><blockquote><p><strong>&quot;좋은 아키텍처는 비즈니스 문제를 해결하면서도 미래의 변화에 유연하게 대응할 수 있어야 합니다. 10년간의 경험을 통해 배운 가장 중요한 교훈입니다.&quot;</strong></p></blockquote>`,29))])}const k=p(u,[["render",h]]),b=JSON.parse('{"path":"/notes/architecture/","title":"🏗️ 소프트웨어 아키텍처","lang":"ko-KR","frontmatter":{},"headers":[{"level":2,"title":"📋 실무 경험 기반 아키텍처 가이드","slug":"📋-실무-경험-기반-아키텍처-가이드","link":"#📋-실무-경험-기반-아키텍처-가이드","children":[{"level":3,"title":"🏢 금융권 MSA 설계 경험","slug":"🏢-금융권-msa-설계-경험","link":"#🏢-금융권-msa-설계-경험","children":[]},{"level":3,"title":"⚙️ 전략 패턴과 확장성 설계","slug":"⚙️-전략-패턴과-확장성-설계","link":"#⚙️-전략-패턴과-확장성-설계","children":[]},{"level":3,"title":"🚀 성능과 확장성","slug":"🚀-성능과-확장성","link":"#🚀-성능과-확장성","children":[]},{"level":3,"title":"🔧 DevOps와 운영 아키텍처","slug":"🔧-devops와-운영-아키텍처","link":"#🔧-devops와-운영-아키텍처","children":[]}]},{"level":2,"title":"🏗️ 실제 프로젝트 아키텍처 진화 과정","slug":"🏗️-실제-프로젝트-아키텍처-진화-과정","link":"#🏗️-실제-프로젝트-아키텍처-진화-과정","children":[]},{"level":2,"title":"📊 실무 검증된 아키텍처 패턴","slug":"📊-실무-검증된-아키텍처-패턴","link":"#📊-실무-검증된-아키텍처-패턴","children":[{"level":3,"title":"MSA 서비스 분해 기준","slug":"msa-서비스-분해-기준","link":"#msa-서비스-분해-기준","children":[]},{"level":3,"title":"아키텍처 패턴별 적용 경험","slug":"아키텍처-패턴별-적용-경험","link":"#아키텍처-패턴별-적용-경험","children":[]}]},{"level":2,"title":"🎯 아키텍처 설계 원칙과 실무 적용","slug":"🎯-아키텍처-설계-원칙과-실무-적용","link":"#🎯-아키텍처-설계-원칙과-실무-적용","children":[{"level":3,"title":"1. SOLID 원칙 실무 적용","slug":"_1-solid-원칙-실무-적용","link":"#_1-solid-원칙-실무-적용","children":[]},{"level":3,"title":"2. 확장성 설계 패턴","slug":"_2-확장성-설계-패턴","link":"#_2-확장성-설계-패턴","children":[]},{"level":3,"title":"3. 장애 격리와 복구","slug":"_3-장애-격리와-복구","link":"#_3-장애-격리와-복구","children":[]}]},{"level":2,"title":"🔧 실무 아키텍처 체크리스트","slug":"🔧-실무-아키텍처-체크리스트","link":"#🔧-실무-아키텍처-체크리스트","children":[{"level":3,"title":"설계 초기 단계","slug":"설계-초기-단계","link":"#설계-초기-단계","children":[]},{"level":3,"title":"구현 단계","slug":"구현-단계","link":"#구현-단계","children":[]},{"level":3,"title":"운영 단계","slug":"운영-단계","link":"#운영-단계","children":[]}]},{"level":2,"title":"📈 실무 트러블슈팅과 해결","slug":"📈-실무-트러블슈팅과-해결","link":"#📈-실무-트러블슈팅과-해결","children":[{"level":3,"title":"Case 1: 메모리 누수로 인한 시스템 다운","slug":"case-1-메모리-누수로-인한-시스템-다운","link":"#case-1-메모리-누수로-인한-시스템-다운","children":[]},{"level":3,"title":"Case 2: MSA 환경에서 분산 트랜잭션 문제","slug":"case-2-msa-환경에서-분산-트랜잭션-문제","link":"#case-2-msa-환경에서-분산-트랜잭션-문제","children":[]},{"level":3,"title":"Case 3: 레거시 시스템 성능 병목","slug":"case-3-레거시-시스템-성능-병목","link":"#case-3-레거시-시스템-성능-병목","children":[]}]},{"level":2,"title":"🎯 아키텍처 진화 방향","slug":"🎯-아키텍처-진화-방향","link":"#🎯-아키텍처-진화-방향","children":[{"level":3,"title":"현재 관심 기술","slug":"현재-관심-기술","link":"#현재-관심-기술","children":[]},{"level":3,"title":"향후 적용 계획","slug":"향후-적용-계획","link":"#향후-적용-계획","children":[]}]}],"git":{"updatedTime":1753245441000,"contributors":[{"name":"byounghoonmoon","username":"byounghoonmoon","email":"passion.mbh@gmail.com","commits":1,"url":"https://github.com/byounghoonmoon"}],"changelog":[{"hash":"c6c756b87bac92db7df2e9d3758e26e214f23fba","time":1753245441000,"email":"passion.mbh@gmail.com","author":"byounghoonmoon","message":"first commit"}]},"filePathRelative":"notes/architecture/README.md"}');export{k as comp,b as data};
